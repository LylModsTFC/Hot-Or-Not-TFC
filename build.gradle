buildscript {
    repositories {
        maven { url = "https://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
    }
}

apply plugin: "net.minecraftforge.gradle.forge"

version = modVersion
group = modGroup
archivesBaseName = modBaseName

sourceCompatibility = targetCompatibility = 1.8

repositories {
    mavenCentral()
    // Curse
    maven {
        url = "https://cursemaven.com"
    }
    // JEI
    maven {
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    // JEI fallback
    maven {
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
}

minecraft {
    version = "${project.minecraftVersion}-${project.forgeVersion}"
    runDir = "run"
    mappings = project.minecraftMappings

    clientJvmArgs += "-Xmx4G"
    clientJvmArgs += "-Xms4G"

    clientRunArgs += ["--username", "Dev"]
    clientJvmArgs += "-Dfml.doNotBackup=true"

    replace("\${MODID}", project.modID)
    replace("\${MODNAME}", project.modName)
    replace("\${VERSION}", project.modVersion)
    replaceIn("${project.modClass}.java")
}

dependencies {
    deobfCompile("curse.maven:TerraFirmaCraft-${project.tfcProjectID}:${project.tfcProjectFile}")

    // Compile against the JEI API but do not include it at runtime
    deobfProvided("mezz.jei:jei_${project.minecraftVersion}:4.15.0.291:api")
    // At runtime, use the full JEI jar
    runtime("mezz.jei:jei_${project.minecraftVersion}:4.15.0.291")
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}